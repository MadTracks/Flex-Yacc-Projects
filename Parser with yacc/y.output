Terminals unused in grammar

   KW_DEFFUN
   KW_EXIT
   KW_LOAD
   STRING_VALUE
   OP_COMMA
   COMMENT


Grammar

    0 $accept: INPUT $end

    1 INPUT: EXPI
    2      | EXPB
    3      | EXPLISTI

    4 LISTVALUE: OP_OP KW_LIST VALUES OP_CP

    5 VALUES: VALUES VALUE
    6       | VALUE

    7 EXPI: OP_OP OP_PLUS EXPI EXPI OP_CP
    8     | OP_OP OP_MINUS EXPI EXPI OP_CP
    9     | OP_OP OP_MULT EXPI EXPI OP_CP
   10     | OP_OP OP_DIV EXPI EXPI OP_CP
   11     | OP_OP OP_DBLMULT EXPI EXPI OP_CP
   12     | IDENTIFIER
   13     | VALUE
   14     | OP_OP KW_SET IDENTIFIER EXPI OP_CP
   15     | OP_OP KW_IF EXPB EXPI OP_CP
   16     | OP_OP KW_IF EXPB EXPI EXPI OP_CP
   17     | OP_OP KW_WHILE OP_OP EXPB OP_CP EXPI OP_CP
   18     | OP_OP KW_FOR OP_OP IDENTIFIER EXPI EXPB OP_CP EXPI OP_CP
   19     | OP_OP KW_DISP EXPI OP_CP
   20     | OP_OP KW_DISP EXPLISTI OP_CP
   21     | OP_OP KW_DISP EXPB OP_CP

   22 EXPB: OP_OP KW_AND EXPB EXPB OP_CP
   23     | OP_OP KW_OR EXPB EXPB OP_CP
   24     | OP_OP KW_NOT EXPB OP_CP
   25     | OP_OP KW_EQUAL EXPB EXPB OP_CP
   26     | OP_OP KW_EQUAL EXPI EXPI OP_CP
   27     | OP_OP KW_LESS EXPB EXPB OP_CP
   28     | OP_OP KW_LESS EXPI EXPI OP_CP
   29     | KW_TRUE
   30     | KW_FALSE

   31 EXPLISTI: OP_OP KW_CONCAT EXPLISTI EXPLISTI OP_CP
   32         | OP_OP KW_APPEND EXPI EXPLISTI OP_CP
   33         | LISTVALUE
   34         | KW_NIL


Terminals, with rules where they appear

$end (0) 0
error (256)
OP_OP (258) 4 7 8 9 10 11 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 31 32
OP_CP (259) 4 7 8 9 10 11 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 31 32
KW_LESS (260) 27 28
KW_NIL (261) 34
KW_WHILE (262) 17
KW_AND (263) 22
KW_APPEND (264) 32
KW_CONCAT (265) 31
KW_EQUAL (266) 25 26
KW_FALSE (267) 30
KW_LIST (268) 4
KW_NOT (269) 24
KW_OR (270) 23
KW_SET (271) 14
KW_TRUE (272) 29
KW_DEFFUN (273)
KW_FOR (274) 18
KW_IF (275) 15 16
KW_EXIT (276)
KW_LOAD (277)
KW_DISP (278) 19 20 21
STRING_VALUE (279)
OP_COMMA (280)
COMMENT (281)
OP_PLUS (282) 7
OP_MINUS (283) 8
OP_MULT (284) 9
OP_DIV (285) 10
OP_DBLMULT (286) 11
VALUE (287) 5 6 13
IDENTIFIER (288) 12 14 18


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
INPUT (35)
    on left: 1 2 3, on right: 0
LISTVALUE (36)
    on left: 4, on right: 33
VALUES (37)
    on left: 5 6, on right: 4 5
EXPI (38)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21, on right: 1
    7 8 9 10 11 14 15 16 17 18 19 26 28 32
EXPB (39)
    on left: 22 23 24 25 26 27 28 29 30, on right: 2 15 16 17 18 21
    22 23 24 25 27
EXPLISTI (40)
    on left: 31 32 33 34, on right: 3 20 31 32


State 0

    0 $accept: . INPUT $end

    OP_OP       shift, and go to state 1
    KW_NIL      shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    INPUT      go to state 7
    LISTVALUE  go to state 8
    EXPI       go to state 9
    EXPB       go to state 10
    EXPLISTI   go to state 11


State 1

    4 LISTVALUE: OP_OP . KW_LIST VALUES OP_CP
    7 EXPI: OP_OP . OP_PLUS EXPI EXPI OP_CP
    8     | OP_OP . OP_MINUS EXPI EXPI OP_CP
    9     | OP_OP . OP_MULT EXPI EXPI OP_CP
   10     | OP_OP . OP_DIV EXPI EXPI OP_CP
   11     | OP_OP . OP_DBLMULT EXPI EXPI OP_CP
   14     | OP_OP . KW_SET IDENTIFIER EXPI OP_CP
   15     | OP_OP . KW_IF EXPB EXPI OP_CP
   16     | OP_OP . KW_IF EXPB EXPI EXPI OP_CP
   17     | OP_OP . KW_WHILE OP_OP EXPB OP_CP EXPI OP_CP
   18     | OP_OP . KW_FOR OP_OP IDENTIFIER EXPI EXPB OP_CP EXPI OP_CP
   19     | OP_OP . KW_DISP EXPI OP_CP
   20     | OP_OP . KW_DISP EXPLISTI OP_CP
   21     | OP_OP . KW_DISP EXPB OP_CP
   22 EXPB: OP_OP . KW_AND EXPB EXPB OP_CP
   23     | OP_OP . KW_OR EXPB EXPB OP_CP
   24     | OP_OP . KW_NOT EXPB OP_CP
   25     | OP_OP . KW_EQUAL EXPB EXPB OP_CP
   26     | OP_OP . KW_EQUAL EXPI EXPI OP_CP
   27     | OP_OP . KW_LESS EXPB EXPB OP_CP
   28     | OP_OP . KW_LESS EXPI EXPI OP_CP
   31 EXPLISTI: OP_OP . KW_CONCAT EXPLISTI EXPLISTI OP_CP
   32         | OP_OP . KW_APPEND EXPI EXPLISTI OP_CP

    KW_LESS     shift, and go to state 12
    KW_WHILE    shift, and go to state 13
    KW_AND      shift, and go to state 14
    KW_APPEND   shift, and go to state 15
    KW_CONCAT   shift, and go to state 16
    KW_EQUAL    shift, and go to state 17
    KW_LIST     shift, and go to state 18
    KW_NOT      shift, and go to state 19
    KW_OR       shift, and go to state 20
    KW_SET      shift, and go to state 21
    KW_FOR      shift, and go to state 22
    KW_IF       shift, and go to state 23
    KW_DISP     shift, and go to state 24
    OP_PLUS     shift, and go to state 25
    OP_MINUS    shift, and go to state 26
    OP_MULT     shift, and go to state 27
    OP_DIV      shift, and go to state 28
    OP_DBLMULT  shift, and go to state 29


State 2

   34 EXPLISTI: KW_NIL .

    $default  reduce using rule 34 (EXPLISTI)


State 3

   30 EXPB: KW_FALSE .

    $default  reduce using rule 30 (EXPB)


State 4

   29 EXPB: KW_TRUE .

    $default  reduce using rule 29 (EXPB)


State 5

   13 EXPI: VALUE .

    $default  reduce using rule 13 (EXPI)


State 6

   12 EXPI: IDENTIFIER .

    $default  reduce using rule 12 (EXPI)


State 7

    0 $accept: INPUT . $end

    $end  shift, and go to state 30


State 8

   33 EXPLISTI: LISTVALUE .

    $default  reduce using rule 33 (EXPLISTI)


State 9

    1 INPUT: EXPI .

    $default  reduce using rule 1 (INPUT)


State 10

    2 INPUT: EXPB .

    $default  reduce using rule 2 (INPUT)


State 11

    3 INPUT: EXPLISTI .

    $default  reduce using rule 3 (INPUT)


State 12

   27 EXPB: OP_OP KW_LESS . EXPB EXPB OP_CP
   28     | OP_OP KW_LESS . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 31
    KW_FALSE    shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 32
    EXPB  go to state 33


State 13

   17 EXPI: OP_OP KW_WHILE . OP_OP EXPB OP_CP EXPI OP_CP

    OP_OP  shift, and go to state 34


State 14

   22 EXPB: OP_OP KW_AND . EXPB EXPB OP_CP

    OP_OP     shift, and go to state 35
    KW_FALSE  shift, and go to state 3
    KW_TRUE   shift, and go to state 4

    EXPB  go to state 36


State 15

   32 EXPLISTI: OP_OP KW_APPEND . EXPI EXPLISTI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 38


State 16

   31 EXPLISTI: OP_OP KW_CONCAT . EXPLISTI EXPLISTI OP_CP

    OP_OP   shift, and go to state 39
    KW_NIL  shift, and go to state 2

    LISTVALUE  go to state 8
    EXPLISTI   go to state 40


State 17

   25 EXPB: OP_OP KW_EQUAL . EXPB EXPB OP_CP
   26     | OP_OP KW_EQUAL . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 31
    KW_FALSE    shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 41
    EXPB  go to state 42


State 18

    4 LISTVALUE: OP_OP KW_LIST . VALUES OP_CP

    VALUE  shift, and go to state 43

    VALUES  go to state 44


State 19

   24 EXPB: OP_OP KW_NOT . EXPB OP_CP

    OP_OP     shift, and go to state 35
    KW_FALSE  shift, and go to state 3
    KW_TRUE   shift, and go to state 4

    EXPB  go to state 45


State 20

   23 EXPB: OP_OP KW_OR . EXPB EXPB OP_CP

    OP_OP     shift, and go to state 35
    KW_FALSE  shift, and go to state 3
    KW_TRUE   shift, and go to state 4

    EXPB  go to state 46


State 21

   14 EXPI: OP_OP KW_SET . IDENTIFIER EXPI OP_CP

    IDENTIFIER  shift, and go to state 47


State 22

   18 EXPI: OP_OP KW_FOR . OP_OP IDENTIFIER EXPI EXPB OP_CP EXPI OP_CP

    OP_OP  shift, and go to state 48


State 23

   15 EXPI: OP_OP KW_IF . EXPB EXPI OP_CP
   16     | OP_OP KW_IF . EXPB EXPI EXPI OP_CP

    OP_OP     shift, and go to state 35
    KW_FALSE  shift, and go to state 3
    KW_TRUE   shift, and go to state 4

    EXPB  go to state 49


State 24

   19 EXPI: OP_OP KW_DISP . EXPI OP_CP
   20     | OP_OP KW_DISP . EXPLISTI OP_CP
   21     | OP_OP KW_DISP . EXPB OP_CP

    OP_OP       shift, and go to state 1
    KW_NIL      shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    LISTVALUE  go to state 8
    EXPI       go to state 50
    EXPB       go to state 51
    EXPLISTI   go to state 52


State 25

    7 EXPI: OP_OP OP_PLUS . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 53


State 26

    8 EXPI: OP_OP OP_MINUS . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 54


State 27

    9 EXPI: OP_OP OP_MULT . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 55


State 28

   10 EXPI: OP_OP OP_DIV . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 56


State 29

   11 EXPI: OP_OP OP_DBLMULT . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 57


State 30

    0 $accept: INPUT $end .

    $default  accept


State 31

    7 EXPI: OP_OP . OP_PLUS EXPI EXPI OP_CP
    8     | OP_OP . OP_MINUS EXPI EXPI OP_CP
    9     | OP_OP . OP_MULT EXPI EXPI OP_CP
   10     | OP_OP . OP_DIV EXPI EXPI OP_CP
   11     | OP_OP . OP_DBLMULT EXPI EXPI OP_CP
   14     | OP_OP . KW_SET IDENTIFIER EXPI OP_CP
   15     | OP_OP . KW_IF EXPB EXPI OP_CP
   16     | OP_OP . KW_IF EXPB EXPI EXPI OP_CP
   17     | OP_OP . KW_WHILE OP_OP EXPB OP_CP EXPI OP_CP
   18     | OP_OP . KW_FOR OP_OP IDENTIFIER EXPI EXPB OP_CP EXPI OP_CP
   19     | OP_OP . KW_DISP EXPI OP_CP
   20     | OP_OP . KW_DISP EXPLISTI OP_CP
   21     | OP_OP . KW_DISP EXPB OP_CP
   22 EXPB: OP_OP . KW_AND EXPB EXPB OP_CP
   23     | OP_OP . KW_OR EXPB EXPB OP_CP
   24     | OP_OP . KW_NOT EXPB OP_CP
   25     | OP_OP . KW_EQUAL EXPB EXPB OP_CP
   26     | OP_OP . KW_EQUAL EXPI EXPI OP_CP
   27     | OP_OP . KW_LESS EXPB EXPB OP_CP
   28     | OP_OP . KW_LESS EXPI EXPI OP_CP

    KW_LESS     shift, and go to state 12
    KW_WHILE    shift, and go to state 13
    KW_AND      shift, and go to state 14
    KW_EQUAL    shift, and go to state 17
    KW_NOT      shift, and go to state 19
    KW_OR       shift, and go to state 20
    KW_SET      shift, and go to state 21
    KW_FOR      shift, and go to state 22
    KW_IF       shift, and go to state 23
    KW_DISP     shift, and go to state 24
    OP_PLUS     shift, and go to state 25
    OP_MINUS    shift, and go to state 26
    OP_MULT     shift, and go to state 27
    OP_DIV      shift, and go to state 28
    OP_DBLMULT  shift, and go to state 29


State 32

   28 EXPB: OP_OP KW_LESS EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 58


State 33

   27 EXPB: OP_OP KW_LESS EXPB . EXPB OP_CP

    OP_OP     shift, and go to state 35
    KW_FALSE  shift, and go to state 3
    KW_TRUE   shift, and go to state 4

    EXPB  go to state 59


State 34

   17 EXPI: OP_OP KW_WHILE OP_OP . EXPB OP_CP EXPI OP_CP

    OP_OP     shift, and go to state 35
    KW_FALSE  shift, and go to state 3
    KW_TRUE   shift, and go to state 4

    EXPB  go to state 60


State 35

   22 EXPB: OP_OP . KW_AND EXPB EXPB OP_CP
   23     | OP_OP . KW_OR EXPB EXPB OP_CP
   24     | OP_OP . KW_NOT EXPB OP_CP
   25     | OP_OP . KW_EQUAL EXPB EXPB OP_CP
   26     | OP_OP . KW_EQUAL EXPI EXPI OP_CP
   27     | OP_OP . KW_LESS EXPB EXPB OP_CP
   28     | OP_OP . KW_LESS EXPI EXPI OP_CP

    KW_LESS   shift, and go to state 12
    KW_AND    shift, and go to state 14
    KW_EQUAL  shift, and go to state 17
    KW_NOT    shift, and go to state 19
    KW_OR     shift, and go to state 20


State 36

   22 EXPB: OP_OP KW_AND EXPB . EXPB OP_CP

    OP_OP     shift, and go to state 35
    KW_FALSE  shift, and go to state 3
    KW_TRUE   shift, and go to state 4

    EXPB  go to state 61


State 37

    7 EXPI: OP_OP . OP_PLUS EXPI EXPI OP_CP
    8     | OP_OP . OP_MINUS EXPI EXPI OP_CP
    9     | OP_OP . OP_MULT EXPI EXPI OP_CP
   10     | OP_OP . OP_DIV EXPI EXPI OP_CP
   11     | OP_OP . OP_DBLMULT EXPI EXPI OP_CP
   14     | OP_OP . KW_SET IDENTIFIER EXPI OP_CP
   15     | OP_OP . KW_IF EXPB EXPI OP_CP
   16     | OP_OP . KW_IF EXPB EXPI EXPI OP_CP
   17     | OP_OP . KW_WHILE OP_OP EXPB OP_CP EXPI OP_CP
   18     | OP_OP . KW_FOR OP_OP IDENTIFIER EXPI EXPB OP_CP EXPI OP_CP
   19     | OP_OP . KW_DISP EXPI OP_CP
   20     | OP_OP . KW_DISP EXPLISTI OP_CP
   21     | OP_OP . KW_DISP EXPB OP_CP

    KW_WHILE    shift, and go to state 13
    KW_SET      shift, and go to state 21
    KW_FOR      shift, and go to state 22
    KW_IF       shift, and go to state 23
    KW_DISP     shift, and go to state 24
    OP_PLUS     shift, and go to state 25
    OP_MINUS    shift, and go to state 26
    OP_MULT     shift, and go to state 27
    OP_DIV      shift, and go to state 28
    OP_DBLMULT  shift, and go to state 29


State 38

   32 EXPLISTI: OP_OP KW_APPEND EXPI . EXPLISTI OP_CP

    OP_OP   shift, and go to state 39
    KW_NIL  shift, and go to state 2

    LISTVALUE  go to state 8
    EXPLISTI   go to state 62


State 39

    4 LISTVALUE: OP_OP . KW_LIST VALUES OP_CP
   31 EXPLISTI: OP_OP . KW_CONCAT EXPLISTI EXPLISTI OP_CP
   32         | OP_OP . KW_APPEND EXPI EXPLISTI OP_CP

    KW_APPEND  shift, and go to state 15
    KW_CONCAT  shift, and go to state 16
    KW_LIST    shift, and go to state 18


State 40

   31 EXPLISTI: OP_OP KW_CONCAT EXPLISTI . EXPLISTI OP_CP

    OP_OP   shift, and go to state 39
    KW_NIL  shift, and go to state 2

    LISTVALUE  go to state 8
    EXPLISTI   go to state 63


State 41

   26 EXPB: OP_OP KW_EQUAL EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 64


State 42

   25 EXPB: OP_OP KW_EQUAL EXPB . EXPB OP_CP

    OP_OP     shift, and go to state 35
    KW_FALSE  shift, and go to state 3
    KW_TRUE   shift, and go to state 4

    EXPB  go to state 65


State 43

    6 VALUES: VALUE .

    $default  reduce using rule 6 (VALUES)


State 44

    4 LISTVALUE: OP_OP KW_LIST VALUES . OP_CP
    5 VALUES: VALUES . VALUE

    OP_CP  shift, and go to state 66
    VALUE  shift, and go to state 67


State 45

   24 EXPB: OP_OP KW_NOT EXPB . OP_CP

    OP_CP  shift, and go to state 68


State 46

   23 EXPB: OP_OP KW_OR EXPB . EXPB OP_CP

    OP_OP     shift, and go to state 35
    KW_FALSE  shift, and go to state 3
    KW_TRUE   shift, and go to state 4

    EXPB  go to state 69


State 47

   14 EXPI: OP_OP KW_SET IDENTIFIER . EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 70


State 48

   18 EXPI: OP_OP KW_FOR OP_OP . IDENTIFIER EXPI EXPB OP_CP EXPI OP_CP

    IDENTIFIER  shift, and go to state 71


State 49

   15 EXPI: OP_OP KW_IF EXPB . EXPI OP_CP
   16     | OP_OP KW_IF EXPB . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 72


State 50

   19 EXPI: OP_OP KW_DISP EXPI . OP_CP

    OP_CP  shift, and go to state 73


State 51

   21 EXPI: OP_OP KW_DISP EXPB . OP_CP

    OP_CP  shift, and go to state 74


State 52

   20 EXPI: OP_OP KW_DISP EXPLISTI . OP_CP

    OP_CP  shift, and go to state 75


State 53

    7 EXPI: OP_OP OP_PLUS EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 76


State 54

    8 EXPI: OP_OP OP_MINUS EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 77


State 55

    9 EXPI: OP_OP OP_MULT EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 78


State 56

   10 EXPI: OP_OP OP_DIV EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 79


State 57

   11 EXPI: OP_OP OP_DBLMULT EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 80


State 58

   28 EXPB: OP_OP KW_LESS EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 81


State 59

   27 EXPB: OP_OP KW_LESS EXPB EXPB . OP_CP

    OP_CP  shift, and go to state 82


State 60

   17 EXPI: OP_OP KW_WHILE OP_OP EXPB . OP_CP EXPI OP_CP

    OP_CP  shift, and go to state 83


State 61

   22 EXPB: OP_OP KW_AND EXPB EXPB . OP_CP

    OP_CP  shift, and go to state 84


State 62

   32 EXPLISTI: OP_OP KW_APPEND EXPI EXPLISTI . OP_CP

    OP_CP  shift, and go to state 85


State 63

   31 EXPLISTI: OP_OP KW_CONCAT EXPLISTI EXPLISTI . OP_CP

    OP_CP  shift, and go to state 86


State 64

   26 EXPB: OP_OP KW_EQUAL EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 87


State 65

   25 EXPB: OP_OP KW_EQUAL EXPB EXPB . OP_CP

    OP_CP  shift, and go to state 88


State 66

    4 LISTVALUE: OP_OP KW_LIST VALUES OP_CP .

    $default  reduce using rule 4 (LISTVALUE)


State 67

    5 VALUES: VALUES VALUE .

    $default  reduce using rule 5 (VALUES)


State 68

   24 EXPB: OP_OP KW_NOT EXPB OP_CP .

    $default  reduce using rule 24 (EXPB)


State 69

   23 EXPB: OP_OP KW_OR EXPB EXPB . OP_CP

    OP_CP  shift, and go to state 89


State 70

   14 EXPI: OP_OP KW_SET IDENTIFIER EXPI . OP_CP

    OP_CP  shift, and go to state 90


State 71

   18 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER . EXPI EXPB OP_CP EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 91


State 72

   15 EXPI: OP_OP KW_IF EXPB EXPI . OP_CP
   16     | OP_OP KW_IF EXPB EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 37
    OP_CP       shift, and go to state 92
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 93


State 73

   19 EXPI: OP_OP KW_DISP EXPI OP_CP .

    $default  reduce using rule 19 (EXPI)


State 74

   21 EXPI: OP_OP KW_DISP EXPB OP_CP .

    $default  reduce using rule 21 (EXPI)


State 75

   20 EXPI: OP_OP KW_DISP EXPLISTI OP_CP .

    $default  reduce using rule 20 (EXPI)


State 76

    7 EXPI: OP_OP OP_PLUS EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 94


State 77

    8 EXPI: OP_OP OP_MINUS EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 95


State 78

    9 EXPI: OP_OP OP_MULT EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 96


State 79

   10 EXPI: OP_OP OP_DIV EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 97


State 80

   11 EXPI: OP_OP OP_DBLMULT EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 98


State 81

   28 EXPB: OP_OP KW_LESS EXPI EXPI OP_CP .

    $default  reduce using rule 28 (EXPB)


State 82

   27 EXPB: OP_OP KW_LESS EXPB EXPB OP_CP .

    $default  reduce using rule 27 (EXPB)


State 83

   17 EXPI: OP_OP KW_WHILE OP_OP EXPB OP_CP . EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 99


State 84

   22 EXPB: OP_OP KW_AND EXPB EXPB OP_CP .

    $default  reduce using rule 22 (EXPB)


State 85

   32 EXPLISTI: OP_OP KW_APPEND EXPI EXPLISTI OP_CP .

    $default  reduce using rule 32 (EXPLISTI)


State 86

   31 EXPLISTI: OP_OP KW_CONCAT EXPLISTI EXPLISTI OP_CP .

    $default  reduce using rule 31 (EXPLISTI)


State 87

   26 EXPB: OP_OP KW_EQUAL EXPI EXPI OP_CP .

    $default  reduce using rule 26 (EXPB)


State 88

   25 EXPB: OP_OP KW_EQUAL EXPB EXPB OP_CP .

    $default  reduce using rule 25 (EXPB)


State 89

   23 EXPB: OP_OP KW_OR EXPB EXPB OP_CP .

    $default  reduce using rule 23 (EXPB)


State 90

   14 EXPI: OP_OP KW_SET IDENTIFIER EXPI OP_CP .

    $default  reduce using rule 14 (EXPI)


State 91

   18 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER EXPI . EXPB OP_CP EXPI OP_CP

    OP_OP     shift, and go to state 35
    KW_FALSE  shift, and go to state 3
    KW_TRUE   shift, and go to state 4

    EXPB  go to state 100


State 92

   15 EXPI: OP_OP KW_IF EXPB EXPI OP_CP .

    $default  reduce using rule 15 (EXPI)


State 93

   16 EXPI: OP_OP KW_IF EXPB EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 101


State 94

    7 EXPI: OP_OP OP_PLUS EXPI EXPI OP_CP .

    $default  reduce using rule 7 (EXPI)


State 95

    8 EXPI: OP_OP OP_MINUS EXPI EXPI OP_CP .

    $default  reduce using rule 8 (EXPI)


State 96

    9 EXPI: OP_OP OP_MULT EXPI EXPI OP_CP .

    $default  reduce using rule 9 (EXPI)


State 97

   10 EXPI: OP_OP OP_DIV EXPI EXPI OP_CP .

    $default  reduce using rule 10 (EXPI)


State 98

   11 EXPI: OP_OP OP_DBLMULT EXPI EXPI OP_CP .

    $default  reduce using rule 11 (EXPI)


State 99

   17 EXPI: OP_OP KW_WHILE OP_OP EXPB OP_CP EXPI . OP_CP

    OP_CP  shift, and go to state 102


State 100

   18 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER EXPI EXPB . OP_CP EXPI OP_CP

    OP_CP  shift, and go to state 103


State 101

   16 EXPI: OP_OP KW_IF EXPB EXPI EXPI OP_CP .

    $default  reduce using rule 16 (EXPI)


State 102

   17 EXPI: OP_OP KW_WHILE OP_OP EXPB OP_CP EXPI OP_CP .

    $default  reduce using rule 17 (EXPI)


State 103

   18 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER EXPI EXPB OP_CP . EXPI OP_CP

    OP_OP       shift, and go to state 37
    VALUE       shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 104


State 104

   18 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER EXPI EXPB OP_CP EXPI . OP_CP

    OP_CP  shift, and go to state 105


State 105

   18 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER EXPI EXPB OP_CP EXPI OP_CP .

    $default  reduce using rule 18 (EXPI)
